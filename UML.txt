//Wordle Game UML Diagram
//-------------------------------

//UML Diagram
[WGGui]-->[FirstView]

[WGView]->[WGModel]
[WGView]->[WGController]
[WGView]<>->[KeyBoardView]
[WGView]<>->[GridView]
[WGView]->[KeyBoardView]
[WGView]->[GridView]

[GridView]->[WGView]
[KeyBoardView]->[WGView]

[WGController]->[WGModel]
[WGController]->[WGView]


[FirstView]-->[WGController]
[FirstView]<>->[WGController]
[FirstView]-->[WGModel]
[FirstView]<>->[WGModel]
[FirstView]-->[WGView]
[FirstView]<>->[WGView]


[WGCli]->[WGModel]
[WGCli]<>->[WGModel]

[WGView]^[Observer]
[FirstView]^[Observer]


//Definition ViewClass
[WGView| -controller: WGController;-frame: JFrame;-panel: JPanel; -grid: GridView;-keyboard: KeyBoardView; -JButton newgame|-createControls():void; -createPanel():void; +update():void; -showErrorPannel(): void; -applyColor(): Color]

[KeyBoardView|-keyboard: JButton Array;-keyboardpanel: JPanel;-keygridfirst: JPanel;-keygridsecond: JPanel;-keygridthird: JPanel;-view: WGView|createControl():void;createPanel(): void; -EnterKey(): void;-BackSpace(): void;-LetterKey(): void;-createKeys(label: String);-removeLastChar(s: String);-addKeyToGrid(): void, -changBackGroundColor(): void]

[GridView|-lettercase: JLabel Array;-gridpanel: JPanel;-view: WGView|-addLabelsView(): void ;-changeLabel(index: int,letter: String): void;-changeBackgroundColor(colum: int): void]

[FirstView|-yes: JButton;-no: JButton;-newgame: JButton; exit: JButton;-randomflag: boolean; -errorflag: boolean; -debbugflag: boolean; -isnewgame: boolean;-model: WGModel; -view: WGView; -panel: JPanel; -frame: JFrame; -textondisplay: JLabel|-createPanel():void; -setUpFlag(bool: boolean): void; -randomWord(bool: boolean): void; -debbugMode(bool: boolean): void; -displayError(bool: boolean): void; -startGame(): void; -endGame(): void; +update(o: Observable, arg: Object): void]


//Definition Controller and Model
[WGController|-model: WGModel; -view: WGView|-change(): void;-initialise(): void; -setRandomFlag(bool: boolean): void; -setDebbugFlag(bool: boolean): void; -setErrorFlag(bool: boolean): void; -getPlayerWord(): String; -setPlayerWord(s: String): void; -getGuess(): int; -isFirstflag(): boolean; -isDebbugFlag(): boolean; -getWordtoguess(): String; -isErrorFlag(): boolean; -getColors(): int Array; isWordAccept: int; enableGame: void; setNewGame(): void; setView(wgView: WGView): void; getLastWord(): String]

[WGModel|-GUESS : double;-randomflag: boolean;-debbugflag: boolean; -errorflag: boolean; -firstflag: boolean; -RED: int; -GREEN: int; -ORANGE: int; -GRAY: int; -newgame: boolean;-win: boolean;-asked: boolean ;-wordtoguess: String;-colors: int Array;-playerword: String; -lastWord: String;-guess: int|-initialise(): void; -setWordtoGuess(): void; -isWordAccept(): int; -askForNewGame(): void; -change() : void; -isWordOnList(): Boolean; -checkList(sc: Scanner): Boolean; -changeColors(): void]


//Definition WGCli with a main function for the CLI mode
[WGCli|-model: WGModel;-endgame: boolean;-letters: int Array; -COLOR_RESET: String; -COLOR_RED: String; -COLOR_GREEN: String; -COLOR_YELLOW: String; -COLOR_RED_BOLD: String; -COLOR_GREEN_BOLD: String; -COLOR_YELLOW_BOLD: String; -COLOR_YELLOW_BRIGHT: String| +main(args: String Array): void; -displayTheLetter(value: int): void;-displayLetters(): void;-changeLetters(): void;-applyColors(): void; -mainScreen(): void; -prompt(): void; -inputFlags(): void;-getInput(): String;-initialiseWordle(): void;-setUpFlag(number: int, answer: String): void;-newgame():void; -takeInput(): String; -isNotSpecialInput(): boolean]

//Definition WGGui class with a main function fot the GUI mode
[WGGui|+main();+createAndShowGUI()]
